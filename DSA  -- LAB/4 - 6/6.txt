#include<stdio.h>
void swap(int *a,int *b)
{
    int t=(*a);
    (*a)=(*b);
    (*b)=t;
}
void quickSort(int a[],int low,int high)
{
    int pi;
    if(low<high)
    {
        pi=partition(a,low,high);

        quickSort(a,low,pi-1);
        quickSort(a,pi+1,high);
    }
    return;
}
int partition(int a[],int low,int high)
{
    int pivot=a[high];
    int i=(low-1),j;
    for(j=low;j<=high-1;j++)
    {
        if(a[j]<=pivot)
            {
                i++;
                swap(&a[i],&a[j]);
            }
    }
    swap(&a[i+1],&a[high]);
    return (i+1);
}
int binsrch(int a[],int x,int high)
{
    int mid,low=0;
    while(low<=high)
    {
        mid=(low+high)/2;
        if(a[mid]==x)
            return 1;
        if(a[mid]>x)
            high=mid-1;
        else
            low=mid+1;
    }
    return 0;
}
int main()
{
    int n,x;
    scanf("%d %d",&n,&x);
    int i,j,k,a[n];
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    quickSort(a,0,n-1);
    for(i=0;i<n;i++)
    {
        int t=x-a[i];
        if(binsrch(a,t,n-1))
        {
            printf("YES");
            return 0;
        }
    }
    printf("NO");
    return 0;
}
